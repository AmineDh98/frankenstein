FROM osrf/ros:noetic-desktop

ARG CARTOGRAPHER_VERSION=master
ARG CARTOGRAPHER_SHA=LATEST
ARG DEBIAN_FRONTEND=noninteractive

# Install necessary dependencies
RUN apt-get update && apt-get install -y sudo git python3-catkin-tools python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential

RUN apt-get update && apt-get install -y \
    ros-noetic-pcl-ros \
    ros-noetic-pcl-conversions \
    gazebo11 \
    ros-noetic-gazebo-msgs \
    ros-noetic-gazebo-ros \
    qtbase5-dev \
    python3-sphinx \
    libcairo2-dev \
    libceres-dev \
    libgflags-dev \
    libgoogle-glog-dev \
    liblua5.2-dev \
    libprotobuf-dev \
    protobuf-compiler \
    libprotoc-dev \
    libpcl-dev \
    ros-noetic-tf2-eigen && \
    rm -rf /var/lib/apt/lists/*

# Preparing cartographer workspace
COPY cartographer_ws/src/cartographer_ros/cartographer_ros.rosinstall cartographer_ros/
COPY cartographer_ws/src/cartographer_ros/scripts/prepare_catkin_workspace.sh cartographer_ros/scripts/
RUN CARTOGRAPHER_SHA=$CARTOGRAPHER_SHA \
    CARTOGRAPHER_VERSION=$CARTOGRAPHER_VERSION \
    cartographer_ros/scripts/prepare_catkin_workspace.sh && \
    sed -i -e "s%<depend>libabsl-dev</depend>%<\!--<depend>libabsl-dev</depend>-->%g" catkin_ws/src/cartographer/package.xml

# Installing ROS dependencies
COPY cartographer_ws/src/cartographer_ros/cartographer_ros/package.xml catkin_ws/src/cartographer_ros/cartographer_ros/
COPY cartographer_ws/src/cartographer_ros/cartographer_ros_msgs/package.xml catkin_ws/src/cartographer_ros/cartographer_ros_msgs/
COPY cartographer_ws/src/cartographer_ros/cartographer_rviz/package.xml catkin_ws/src/cartographer_ros/cartographer_rviz/
COPY cartographer_ws/src/cartographer_ros/scripts/install_debs.sh cartographer_ros/scripts/
RUN cartographer_ros/scripts/install_debs.sh

# Install Abseil
RUN /catkin_ws/src/cartographer/scripts/install_abseil.sh

# Build and install cartographer packages
COPY cartographer_ws/src/cartographer_ros/scripts/install.sh cartographer_ros/scripts/
COPY cartographer_ws/src/cartographer_ros/scripts/catkin_test_results.sh cartographer_ros/scripts/
RUN cartographer_ros/scripts/install.sh --pkg cartographer && \
    cartographer_ros/scripts/install.sh --pkg cartographer --make-args test

COPY cartographer_ws/src/cartographer_ros/cartographer_ros_msgs catkin_ws/src/cartographer_ros/cartographer_ros_msgs/
RUN cartographer_ros/scripts/install.sh --pkg cartographer_ros_msgs && \
    cartographer_ros/scripts/install.sh --pkg cartographer_ros_msgs \
        --catkin-make-args run_tests && \
    cartographer_ros/scripts/catkin_test_results.sh build_isolated/cartographer_ros_msgs

COPY cartographer_ws/src/cartographer_ros/cartographer_ros catkin_ws/src/cartographer_ros/cartographer_ros/
RUN cartographer_ros/scripts/install.sh --pkg cartographer_ros && \
    cartographer_ros/scripts/install.sh --pkg cartographer_ros \
        --catkin-make-args run_tests && \
    cartographer_ros/scripts/catkin_test_results.sh build_isolated/cartographer_ros

COPY cartographer_ws/src/cartographer_ros/cartographer_rviz catkin_ws/src/cartographer_ros/cartographer_rviz/
RUN cartographer_ros/scripts/install.sh --pkg cartographer_rviz && \
    cartographer_ros/scripts/install.sh --pkg cartographer_rviz \
        --catkin-make-args run_tests && \
    cartographer_ros/scripts/catkin_test_results.sh build_isolated/cartographer_rviz

# Begin frankenstein package setup
WORKDIR /home/aminedhemaied
# Copy the frankenstein packages to the container
COPY catkin_ws/src/frankenstein /home/aminedhemaied/catkin_ws/src/frankenstein

# Initialize rosdep
RUN rosdep update && rosdep install --from-paths . --ignore-src -r -y

# Build the frankenstein packages
WORKDIR /home/aminedhemaied/catkin_ws
RUN /bin/bash -c '. /opt/ros/noetic/setup.bash; catkin_make'

# Reset work directory
WORKDIR /

# Copy entrypoint script
COPY cartographer_ws/src/cartographer_ros/scripts/ros_entrypoint.sh /

# Clean up
RUN rm -rf /var/lib/apt/lists/* && rm -rf /home/aminedhemaied/catkin_ws/src/cartographer || true

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]

RUN apt-get update && apt-get install -y liblua5.3-0
